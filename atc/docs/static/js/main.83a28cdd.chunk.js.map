{"version":3,"sources":["api.js","App.js","index.js"],"names":["a","fetch","res","json","user_id","console","log","Header","className","Card","props","array","sub","background","style","margin","backgroundColor","href","url","target","contest","title","diff","class","user","type","value","onClick","deleteTask","id","ProblemSet","map","key","Form","useState","problemUrl","setProblemUrl","problems","setProblems","userName_tmp","userName","addProblem","event","tmp","slice","length","urlsplit","split","problem_Id_tmp","contest_tmp","Name_tmp","diff_tmp","sub_tmp","fetchPromInfo","then","url1s","fetchPromDiff","url2","fetchUesrsSub","url3","problem_id","result","problem_Obj","unshift","alert","useEffect","localStorage","saveDate","JSON","parse","setItem","stringify","placeholder","onChange","onKeyPress","splice","Main","setUserName","userName_localst","document","getElementById","userform","role","aria-label","e","Footer","TwitterIcon","size","round","EmailIcon","App","render","querySelector"],"mappings":"qMAAO,4BAAAA,EAAA,sEACeC,MAAM,wDADrB,cACGC,EADH,gBAKUA,EAAIC,OALd,oF,kEAQA,4BAAAH,EAAA,sEACgBC,MAAM,8DADtB,cACGC,EADH,gBAKUA,EAAIC,OALd,oF,kEAQA,WAA6BC,GAA7B,eAAAJ,EAAA,6DACHK,QAAQC,IAAIF,GADT,SAEeH,MAAM,yDAAD,OACsCG,IAH1D,cAEGF,EAFH,gBAKUA,EAAIC,OALd,oF,0CCTP,SAASI,IACL,OACI,8BACI,wBAAQC,UAAU,0BAAlB,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,YAAf,SACI,oBAAIA,UAAU,aAAd,sCAWxB,SAASC,EAAKC,GACVL,QAAQC,IAAII,EAAMC,MAAMC,KACxB,IAAIC,EAAa,GAWjB,OAVAR,QAAQC,IAAII,EAAMC,MAAMC,KAEpBC,EADmB,OAApBH,EAAMC,MAAMC,IACC,UACe,UAApBF,EAAMC,MAAMC,IACR,UAEA,UAKX,qBAAKJ,UAAU,OAAOM,MAAO,CAAEC,OAAQ,MAAOC,gBAAgBH,GAA9D,SACI,sBAAKL,UAAU,eAAf,UACI,mBAAGA,UAAU,QAAb,SACI,oBAAGS,KAAQP,EAAMC,MAAMO,IAAKC,OAAO,SAAnC,UAEKT,EAAMC,MAAMS,QAAU,IAAKV,EAAMC,MAAMU,MAAM,uBAC5C,QAAUX,EAAMC,MAAMW,KAAO,eAAiBZ,EAAMC,MAAMC,IAAI,4BAIxE,oBAAGW,MAAM,WAAT,kBACUb,EAAMC,MAAMa,QAGtB,wBAAQhB,UAAU,cAAlB,SAEI,uBAAQiB,KAAO,SAASC,MAAQ,SAASlB,UAAU,mBAAmBmB,QAAS,kBAAMjB,EAAMkB,WAAWlB,EAAMmB,cAOhI,SAASC,EAAWpB,GAEhB,OACI,8BACI,qBAAKF,UAAU,qBAAf,SACKE,EAAMC,MAAMoB,KAAK,SAACpB,EAAOqB,GACtB,OAAO,cAACvB,EAAD,CAAME,MAAOA,EAAOkB,GAAKG,EAAKJ,WAAYlB,EAAMkB,oBAO3E,SAASK,EAAKvB,GAAQ,IAAD,EACmBwB,mBAAS,IAD5B,mBACVC,EADU,KACEC,EADF,OAEeF,mBAAS,IAFxB,mBAEVG,EAFU,KAEAC,EAFA,KAGbC,EAAe7B,EAAM8B,SAqBzB,SAASC,EAAWC,GAChBrC,QAAQC,IAAII,EAAM8B,UAClB,IAAIG,EAAMN,EAASO,MAAM,EAAGP,EAASQ,QAE/BC,EAAWX,EAAWY,MAAM,KAC5BC,EAAiBF,EAASA,EAASD,OAAO,GAC1CI,EAAcH,EAASA,EAASD,OAAO,GAEzCK,EAAW,GACXC,EAAW,EACXC,EAAU,SD5Gf,WAAP,gCC8GQC,GAAgBC,MAAK,SAACC,GAElBA,EAAMxB,KAAI,SAACwB,GACJA,EAAM1B,KAAOmB,IACZE,EAAWK,EAAMlC,MACjBhB,QAAQC,IAAI4C,UAIrBI,MAAK,WAEY,KAAbJ,EDjHR,WAAP,+BCkHgBM,GAAgBF,MAAK,SAACG,GAClBN,EAA4C,qBAA1BM,EAAKT,GAAiC,EAAES,EAAKT,GAAL,cAC1DM,MAAK,WACLjD,QAAQC,IAAIiC,GD7GzB,SAAP,kCC8GoBmB,CAAcnB,GAAce,MAAK,SAACK,GAC9BA,EAAK5B,KAAI,SAAC4B,GAEHA,EAAKC,aAAeZ,IACJ,UAAZI,GAEmB,OAAZA,GAAoC,OAAhBO,EAAKE,OAD/BT,EAAUO,EAAKE,OAGG,OAAZT,IAEFA,GADW,OAAZA,GAAoC,OAAhBO,EAAKE,QAEN,QAAZT,GAAqBO,EAAKE,OADtBF,EAAKE,gBAUhCP,MAAK,WACJ,IAAIf,EAAgC,KAAjB7B,EAAM8B,SAAc,UAAU9B,EAAM8B,SACjDsB,EAAc,CAChBzC,MAAM6B,EACNhC,IAAIiB,EACJb,KAAK6B,EACLS,WAAWZ,EACX5B,QAAQ6B,EACRrC,IAAIwC,EACJ5B,KAAKe,GAGTI,EAAIoB,QAAQD,GACZxB,EAAYK,SAKpBqB,MAAM,wBAId5B,EAAc,IAgBlB,OA1GA/B,QAAQC,IAAIiC,GAEZ0B,qBAAW,WACP,GAAGC,aAAavD,MAAM,CAClB,IAAMwD,EAAWC,KAAKC,MAAMH,aAAavD,OACzC2B,EAAY6B,MAGlB,IAEFF,qBAAW,WACPC,aAAaI,QAAQ,QAASF,KAAKG,UAAUlC,MAC/C,CAACA,IA+FC,8BACI,+BACA,0BAAS7B,UAAU,UAAnB,UACI,uBAAOA,UAAU,QAAQiB,KAAK,OAAO+C,YAAY,cAAc9C,MAASS,EAAYsC,SA9FhG,SAAsB/B,GAClBN,EAAcM,EAAMvB,OAAOO,QA6FyFgD,WAjBxH,SAAqBhC,GACA,UAAdA,EAAMV,KACLS,OAgBI,wBAAQjC,UAAU,0CAA0CmB,QAASc,EAArE,yBACA,yBAASjC,UAAU,UAAnB,SACI,cAACsB,EAAD,CAAYnB,MAAO0B,EAAUT,WAb7C,SAAoBI,GAChB,IAAIW,EAAMN,EAASO,MAAM,EAAGP,EAASQ,QACrCF,EAAIgC,OAAO3C,EAAK,GAChBM,EAAYK,eAkBpB,SAASiC,IAAQ,IAAD,EACoB1C,mBAAS,IAD7B,mBACLM,EADK,KACKqC,EADL,KAiBZ,OAdAZ,qBAAU,WACN,GAAGC,aAAa1C,KAAM,CAClB,IAAMsD,EAAmBV,KAAKC,MAAMH,aAAa1C,MACxBuD,SAASC,eAAe,YACjDC,SAASvD,MAAQoD,EACjBD,EAAYC,GACZzE,QAAQC,IAAIwE,MAEjB,IAEHb,qBAAW,WACPC,aAAaI,QAAQ,OAAQF,KAAKG,UAAU/B,MAC9C,CAACA,IAGC,gCACI,qBAAKhC,UAAU,SAAS0E,KAAK,aAAaC,aAAW,kBAArD,SACI,qBAAK3E,UAAU,eAAf,SACI,uBAAOA,UAAU,cAAcqB,GAAK,WAAWH,MAASc,EAAUiC,SAAU,SAAAW,GAAC,OAAIP,EAAYO,EAAEjE,OAAOO,QAAQD,KAAK,OAAO+C,YAAY,iBAI9I,cAACvC,EAAD,CAAMO,SAAYA,OAO9B,SAAS6C,IACL,OACA,wBAAQ7E,UAAU,SAAlB,SACI,sBAAKA,UAAU,4BAAf,UACI,uBACI,iDAIA,sBAAKA,UAAU,uBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,mBAAGS,KAAK,gCAAgCE,OAAO,SAA/C,SAAwD,cAACmE,EAAA,EAAD,CAAaC,KAAM,GAAIC,OAAK,QAGxF,qBAAKhF,UAAU,oBAAf,SACI,mBAAGS,KAAK,gCAAR,SAAwC,cAACwE,EAAA,EAAD,CAAWF,KAAM,GAAIC,OAAK,gBAkB3EE,MAVf,WACI,OACI,qCACA,cAACnF,EAAD,IACA,cAACqE,EAAD,IACA,cAACS,EAAD,Q,MC/PRM,iBAAO,cAAC,EAAD,IAASZ,SAASa,cAAc,Y","file":"static/js/main.83a28cdd.chunk.js","sourcesContent":["export async function fetchPromInfo() {\n    const res = await fetch(\n        `https://kenkoooo.com/atcoder/resources/problems.json`\n    );\n\n    return await res.json();\n}\n\nexport async function fetchPromDiff() {\n    const res =  await fetch(\n        `https://kenkoooo.com/atcoder/resources/problem-models.json`\n    );\n\n    return await res.json();\n}\n\nexport async function fetchUesrsSub(user_id) {\n    console.log(user_id);\n    const res = await fetch(\n        `https://kenkoooo.com/atcoder/atcoder-api/results?user=${user_id}`\n    );\n    return await res.json();\n}","import {useEffect, useState} from 'react';\nimport {fetchPromDiff, fetchPromInfo, fetchUesrsSub} from './api';\nimport {\n    EmailIcon,\n    TwitterIcon\n} from 'react-share';\n\nfunction Header() {\n    return(\n        <div>\n            <header className=\"hero is-success is-bold\">\n                <div className=\"hero-body\">\n                    <div className=\"container\">\n                        <h1 className=\"title is-3\">\n                        Atcoder Reminder\n                     </h1>\n                 </div>\n                </div>\n            </header>\n        </div>\n    );\n}\n\n\nfunction Card(props) {\n    console.log(props.array.sub);\n    let background = '';\n    console.log(props.array.sub);\n    if(props.array.sub === 'AC') {\n        background= \"#c8e4cc\";\n    } else if (props.array.sub !== 'nosub'){\n        background=\"#fcecbc\";\n    } else {\n        background=\"#ffffff\";\n    }\n\n\n    return(\n        <div className=\"card\" style={{ margin: \"8px\", backgroundColor:background,}}>\n            <div className=\"card-content\" >\n                <p className=\"title\">\n                    <a href = {props.array.url} target=\"_black\">\n\n                        {props.array.contest + \" \" +props.array.title}<br/>\n                        { \"diff:\" + props.array.diff + \" submission:\" + props.array.sub}<br/>\n                    </a>\n                </p>\n\n                <p class=\"subtitle\">\n                    user:{props.array.user}\n                </p>\n\n                <footer className=\"card-footer\">\n                    {/* <input  type = \"button\" value = \"edit\" className=\"card-footer-item\" onClick ={() => props.editTask(key)}/> */}  \n                    <input  type = \"button\" value = \"delete\" className=\"card-footer-item\" onClick={() => props.deleteTask(props.id)} />\n                </footer>\n            </div>\n        </div>\n    );\n}\n\nfunction ProblemSet(props) {\n\n    return (\n        <div>\n            <div className=\"is-vertical-center\" >       \n                {props.array.map( (array, key) => {\n                    return <Card array={array} id ={key} deleteTask={props.deleteTask} />\n                })}\n            </div>\n        </div>        \n    );\n}\n\nfunction Form(props) {\n    const [problemUrl, setProblemUrl] = useState('');\n    const [problems, setProblems] = useState([]);\n    let userName_tmp = props.userName;\n    console.log(userName_tmp);\n\n    useEffect (() => {\n        if(localStorage.array){ \n            const saveDate = JSON.parse(localStorage.array);\n            setProblems(saveDate);\n          }\n        \n    },[])\n\n    useEffect (() => {\n        localStorage.setItem('array', JSON.stringify(problems));\n    },[problems])\n\n\n\n    function handleChange(event) {\n        setProblemUrl(event.target.value);\n    }\n\n    function addProblem(event) {\n        console.log(props.userName);\n        let tmp = problems.slice(0, problems.length);\n\n        const urlsplit = problemUrl.split('/');\n        const problem_Id_tmp = urlsplit[urlsplit.length-1];\n        const contest_tmp = urlsplit[urlsplit.length-3];\n        \n        let Name_tmp = '';\n        let diff_tmp = 0;\n        let sub_tmp = 'nosub';\n\n        fetchPromInfo().then((url1s) => {\n\n            url1s.map((url1s) => {\n                if(url1s.id === problem_Id_tmp) {\n                    Name_tmp = url1s.title;\n                    console.log(Name_tmp);\n                }\n            });\n\n        }).then(() => {\n\n            if(Name_tmp !== '') {\n                fetchPromDiff().then((url2) => {\n                    diff_tmp = typeof(url2[problem_Id_tmp]) === 'undefined'?0:url2[problem_Id_tmp]['difficulty'];\n                } ).then(() => {\n                    console.log(userName_tmp);\n                    fetchUesrsSub(userName_tmp).then((url3) => {\n                        url3.map((url3) => {\n                          \n                            if(url3.problem_id === problem_Id_tmp) {\n                                if(sub_tmp === 'nosub') {\n                                    sub_tmp = url3.result;\n                                } else if(sub_tmp !== 'AC' && url3.result === 'AC') {\n                                    sub_tmp = url3.result;\n                                } else if(sub_tmp !== 'AC') {\n                                    if(sub_tmp !== 'WA' && url3.result === 'WA') {\n                                        sub_tmp = url3.result;\n                                    } else if(sub_tmp !== 'TLE' && url3.result === 'TLE') {\n                                        sub_tmp = url3.result;\n                                    } else {\n                                        sub_tmp = url3.result;\n                                    }\n                                }\n                            }\n                        });\n\n                    }).then(() => {\n                        let userName_tmp = props.userName===''?'no user':props.userName;\n                        const problem_Obj = {\n                            title:Name_tmp,\n                            url:problemUrl,\n                            diff:diff_tmp,\n                            problem_id:problem_Id_tmp,\n                            contest:contest_tmp,\n                            sub:sub_tmp,\n                            user:userName_tmp\n                        };\n\n                        tmp.unshift(problem_Obj);\n                        setProblems(tmp);\n                        \n                    });\n                });\n            } else {\n                alert(\"Problem Not Found\");\n            }\n        });\n\n        setProblemUrl('');\n    }\n\n    function handlePress(event) {\n        if(event.key === 'Enter') {\n            addProblem();\n        }\n    }\n\n    \n    function deleteTask(key) {\n        let tmp = problems.slice(0, problems.length);\n        tmp.splice(key, 1);\n        setProblems(tmp);\n    }\n\n    return(\n        <div>\n            <main>\n            <section className=\"section\">\n                <input className=\"input\" type=\"text\" placeholder=\"Problem URL\" value = {problemUrl} onChange={handleChange} onKeyPress={handlePress} />\n                <button className=\"button is-fullwidth is-success is-light\" onClick={addProblem}>Add Problem</button>\n                <section className=\"section\">\n                    <ProblemSet array={problems} deleteTask={deleteTask}/>\n                </section>\n            </section>\n            </main>\n        </div>\n    );\n}\n\nfunction Main() {\n    const [userName, setUserName] = useState('');\n\n    useEffect(() => {\n        if(localStorage.user) {\n            const userName_localst = JSON.parse(localStorage.user);\n            const userform_localst = document.getElementById('userform');\n            userform.value = userName_localst;\n            setUserName(userName_localst);\n            console.log(userName_localst);\n        }\n    }, [])\n\n    useEffect (() => {\n        localStorage.setItem('user', JSON.stringify(userName));\n    },[userName])\n\n    return (\n        <div>\n            <nav className=\"navbar\" role=\"navigation\" aria-label=\"main nabigation\">\n                <div className=\"navbar-brand\">\n                    <input className=\"navbar-item\" id = 'userform' value = {userName} onChange={e => setUserName(e.target.value)} type=\"text\" placeholder=\"Username\"></input>\n                </div>\n            </nav>\n\n            <Form userName = {userName}/>\n        </div>\n    );\n}\n\n\n\nfunction Footer() {\n    return(\n    <footer className=\"footer\">\n        <div className=\"content has-text-centered\">\n            <hr></hr>\n                <p>2021&copy;kumastry</p>\n              \n                \n     \n                <div className=\"columns  is-centered\">\n                    <div className=\"column  is-narrow  \">\n                        <a href=\"https://twitter.com/kumastry1\" target=\"_black\"><TwitterIcon size={48} round /></a>\n                    </div>\n                    \n                    <div className=\"column  is-narrow\">\n                        <a href=\"mailto:kumastry2212@gmail.com\"><EmailIcon size={48} round /></a>\n                    </div>\n                </div>\n        </div>\n    </footer>\n    );\n}\n\nfunction App() {\n    return(\n        <>\n        <Header />\n        <Main />\n        <Footer />\n        </>\n    );\n}\n\nexport default App;","import {render} from \"react-dom\";\nimport App from \"./App\";\nimport \"bulma/css/bulma.css\";\n\nrender(<App />, document.querySelector(\"#root\"));\n\n\n"],"sourceRoot":""}